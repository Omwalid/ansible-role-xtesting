---
dist: focal
language: minimal

before_script:
  - sudo sed 's|DOCKER_OPTS="|DOCKER_OPTS="--registry-mirror=https://mirror.gcr.io |g' -i /etc/default/docker
  - sudo service docker restart
  - sudo docker system info
  - sudo pip3 install ansible
  - ansible-galaxy collection install -r requirements.yml
  - ansible-galaxy install git+file://$(pwd) -f
  - mv ~/.ansible/roles/ansible-role-xtesting/ ~/.ansible/roles/collivier.xtesting

jobs:
  include:
    - stage: run tox
      script:
        - sudo apt-get update && sudo apt install python3-testresources -y
        - sudo pip install tox
        - tox
    - stage: run docker playbooks
      script: ansible-playbook -vv tests/all.yml
    - script:
        - ansible-playbook -vv tests/all.yml
    - script:
        - virtualenv --system-site-packages --python=/usr/bin/python3 xtesting
        - . xtesting/bin/activate
        - ansible-playbook -vv tests/all.yml
    - script:
        - sudo pip3 uninstall pyparsing packaging resolvelib ansible-core ansible -y
        - virtualenv --system-site-packages --python=/usr/bin/python3 xtesting
        - . xtesting/bin/activate
        - pip install ansible===2.9.22
        - ansible-playbook -vv tests/all.yml
    - script:
        - sudo pip3 uninstall pyparsing packaging resolvelib ansible-core ansible -y
        - virtualenv --system-site-packages --python=/usr/bin/python3 xtesting
        - . xtesting/bin/activate
        - pip install ansible===2.10.7
        - ansible-playbook -vv tests/all.yml
    - script:
        - sudo pip3 uninstall pyparsing packaging resolvelib ansible-core ansible -y
        - virtualenv --system-site-packages --python=/usr/bin/python3 xtesting
        - . xtesting/bin/activate
        - pip install ansible===3.4.0
        - ansible-playbook -vv tests/all.yml
    - script: ansible-playbook -vv tests/proxy.yml
    - script: ansible-playbook -vv tests/proxy2.yml
    - script: ansible-playbook -vv tests/radosgw.yml
    - script: ansible-playbook -vv tests/nexus.yml
    - script: ansible-playbook -vv tests/repo.yml
    - script: ansible-playbook -vv tests/twice.yml
    - script: ansible-playbook -vv tests/jenkins_2multijobs.yml
    - script: ansible-playbook -vv tests/branch.yml
    - script: ansible-playbook -vv tests/jjb.yml
    - script: ansible-playbook -vv tests/gitlab.insert.yml
    - script: ansible-playbook -vv tests/jenkins_kind.yml
    - script: ansible-playbook -vv tests/jenkins_kind2.yml
    - script: ansible-playbook -vv tests/gitlab_kind.yml
    - script: ansible-playbook -vv tests/chainedci.yml
    - stage: run kubernetes playbooks
      script: travis_wait 45 ansible-playbook -vv tests/kubernetes0.yml
    - script:
        - sudo pip3 uninstall pyparsing packaging resolvelib ansible-core ansible -y
        - virtualenv --system-site-packages --python=/usr/bin/python3 xtesting
        - . xtesting/bin/activate
        - pip install ansible
        - travis_wait 45 ansible-playbook -vv tests/kubernetes0.yml
    - script: travis_wait 45 ansible-playbook -vv tests/kubernetes1.yml
    - script: travis_wait 45 ansible-playbook -vv tests/kubernetes2.yml
    - script: travis_wait 45 ansible-playbook -vv tests/proxy_kubernetes.yml
    - script: travis_wait 45 ansible-playbook -vv tests/proxy_kubernetes2.yml
    - script: travis_wait 45 ansible-playbook -vv tests/k8s_jenkins_kind0.yml
    - script: travis_wait 45 ansible-playbook -vv tests/k8s_jenkins_kind1.yml
    - script: travis_wait 45 ansible-playbook -vv tests/k8s_jenkins_kind2.yml
    - script: travis_wait 45 ansible-playbook -vv tests/k8s_jenkins_kind3.yml
    - script: travis_wait 45 ansible-playbook -vv tests/k8s_gitlab0.yml
    - script: travis_wait 45 ansible-playbook -vv tests/k8s_gitlab1.yml
    - script: travis_wait 45 ansible-playbook -vv tests/k8s_gitlab_kind0.yml
    - script: travis_wait 45 ansible-playbook -vv tests/k8s_gitlab_kind1.yml
    - script: travis_wait 45 ansible-playbook -vv tests/k8s_gitlab_kind2.yml
    - script: travis_wait 45 ansible-playbook -vv tests/k8s_gitlab_kind3.yml
    - stage: deploy your own CI/CD toolchain from scratch
      script: >
        cd tests/hello &&
        sudo docker build -t 127.0.0.1:5000/hello . &&
        ansible-playbook -vv site.yml &&
        sudo docker push 127.0.0.1:5000/hello
    - stage: write your own Xtesting driver
      script: >
        cd tests/weather &&
        sudo docker build -t 127.0.0.1:5000/weather . &&
        ansible-playbook -vv site.yml &&
        sudo docker push 127.0.0.1:5000/weather
